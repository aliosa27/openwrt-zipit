From 6e4de2557bd3a0a68d540c2d5fb26486ea3060de Mon Sep 17 00:00:00 2001
From: Vasily Khoruzhick <anarsoul@gmail.com>
Date: Sat, 2 Apr 2011 15:25:11 +0300
Subject: [PATCH 04/18] ARM: PXA: Add z2-usb-switch driver

This driver controls mode of USB port 2 pins - device or host.

Signed-off-by: Vasily Khoruzhick <anarsoul@gmail.com>
---
 arch/arm/mach-pxa/Kconfig         |    8 +++
 arch/arm/mach-pxa/Makefile        |    1 +
 arch/arm/mach-pxa/z2-usb-switch.c |   98 +++++++++++++++++++++++++++++++++++++
 3 files changed, 107 insertions(+), 0 deletions(-)
 create mode 100644 arch/arm/mach-pxa/z2-usb-switch.c

diff --git a/arch/arm/mach-pxa/Kconfig b/arch/arm/mach-pxa/Kconfig
index cd19309..2b30bdb 100644
--- a/arch/arm/mach-pxa/Kconfig
+++ b/arch/arm/mach-pxa/Kconfig
@@ -599,6 +599,14 @@ config MACH_ZIPIT2
 	select PXA27x
 	select HAVE_PWM
 
+config Z2_USB_SWITCH
+	tristate "Control the state of USB port on Zipit Z2"
+	depends on MACH_ZIPIT2
+	select RFKILL
+	help
+	  This is a simple driver that is able to control
+	  usb mode of Zipit Z2
+
 endmenu
 
 config PXA25x
diff --git a/arch/arm/mach-pxa/Makefile b/arch/arm/mach-pxa/Makefile
index cc39d17..36d495c 100644
--- a/arch/arm/mach-pxa/Makefile
+++ b/arch/arm/mach-pxa/Makefile
@@ -104,3 +104,4 @@ led-$(CONFIG_ARCH_PXA_IDP)	+= leds-idp.o
 obj-$(CONFIG_LEDS)		+= $(led-y)
 
 obj-$(CONFIG_TOSA_BT)		+= tosa-bt.o
+obj-$(CONFIG_Z2_USB_SWITCH)	+= z2-usb-switch.o
diff --git a/arch/arm/mach-pxa/z2-usb-switch.c b/arch/arm/mach-pxa/z2-usb-switch.c
new file mode 100644
index 0000000..19acb28
--- /dev/null
+++ b/arch/arm/mach-pxa/z2-usb-switch.c
@@ -0,0 +1,98 @@
+/*
+ * USB mode switcher for Z2
+ *
+ * Copyright (c) 2011 Vasily Khoruzhick
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ */
+
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/platform_device.h>
+#include <linux/delay.h>
+
+#include <mach/pxa27x.h>
+#include <mach/pxa27x-udc.h>
+
+#define MIN(a, b) ((a) < (b) ? (a) : (b))
+
+static ssize_t usb_mode_show(struct device *dev, struct device_attribute *attr,
+	char *buf)
+{
+	if (UP2OCR & UP2OCR_HXS)
+		return sprintf(buf, "host\n");
+	else
+		return sprintf(buf, "device\n");
+}
+
+static ssize_t usb_mode_set(struct device *dev, struct device_attribute *attr,
+	const char *buf, size_t count)
+{
+	if (strncmp(buf, "host", MIN(count, 4)) == 0) {
+		UP2OCR = UP2OCR_HXS | UP2OCR_HXOE | UP2OCR_DPPDE | UP2OCR_DMPDE;
+		return count;
+	} else if (strncmp(buf, "device", MIN(count, 6)) == 0) {
+		UP2OCR = UP2OCR_HXOE | UP2OCR_DPPUE;
+		return count;
+	}
+	return -EINVAL;
+}
+
+static DEVICE_ATTR(usb_mode, 0644, usb_mode_show, usb_mode_set);
+
+static const struct attribute *attrs[] = {
+	&dev_attr_usb_mode.attr,
+	NULL,
+};
+
+static const struct attribute_group attr_group = {
+	.attrs	= (struct attribute **)attrs,
+};
+
+static int z2_usb_switch_probe(struct platform_device *dev)
+{
+	int res;
+
+	res = sysfs_create_group(&dev->dev.kobj, &attr_group);
+	if (res)
+		return res;
+
+	UP2OCR = UP2OCR_HXOE | UP2OCR_DPPUE;
+
+	return 0;
+}
+
+static int __devexit z2_usb_switch_remove(struct platform_device *dev)
+{
+	UP2OCR = UP2OCR_HXOE;
+	sysfs_remove_group(&dev->dev.kobj, &attr_group);
+
+	return 0;
+}
+
+static struct platform_driver z2_usb_switch_driver = {
+	.probe = z2_usb_switch_probe,
+	.remove = __devexit_p(z2_usb_switch_remove),
+
+	.driver = {
+		.name = "z2-usb-switch",
+		.owner = THIS_MODULE,
+	},
+};
+
+
+static int __init z2_usb_switch_init(void)
+{
+	return platform_driver_register(&z2_usb_switch_driver);
+}
+
+static void __exit z2_usb_switch_exit(void)
+{
+	platform_driver_unregister(&z2_usb_switch_driver);
+}
+
+module_init(z2_usb_switch_init);
+module_exit(z2_usb_switch_exit);
-- 
1.7.1

