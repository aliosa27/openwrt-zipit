From 84596266d4ee855d456b08fb2d86881177cf9384 Mon Sep 17 00:00:00 2001
From: Vasily Khoruzhick <anarsoul@gmail.com>
Date: Sun, 28 Oct 2012 11:34:07 +0300
Subject: [PATCH 13/14] Revert "Input: pxa27x_keypad keep clock on as wakeup
 source"

This reverts commit 6ce34a5fb4955fac1eebe080e1c2784bc8710449.
---
 drivers/input/keyboard/pxa27x_keypad.c | 33 ++++++++++++---------------------
 1 file changed, 12 insertions(+), 21 deletions(-)

diff --git a/drivers/input/keyboard/pxa27x_keypad.c b/drivers/input/keyboard/pxa27x_keypad.c
index 4c17f69..514cb9c 100644
--- a/drivers/input/keyboard/pxa27x_keypad.c
+++ b/drivers/input/keyboard/pxa27x_keypad.c
@@ -417,7 +417,7 @@ static int pxa27x_keypad_open(struct input_dev *dev)
 	struct pxa27x_keypad *keypad = input_get_drvdata(dev);
 
 	/* Enable unit clock */
-	clk_prepare_enable(keypad->clk);
+	clk_enable(keypad->clk);
 	pxa27x_keypad_config(keypad);
 
 	return 0;
@@ -428,7 +428,7 @@ static void pxa27x_keypad_close(struct input_dev *dev)
 	struct pxa27x_keypad *keypad = input_get_drvdata(dev);
 
 	/* Disable clock unit */
-	clk_disable_unprepare(keypad->clk);
+	clk_disable(keypad->clk);
 }
 
 #ifdef CONFIG_PM
@@ -437,14 +437,10 @@ static int pxa27x_keypad_suspend(struct device *dev)
 	struct platform_device *pdev = to_platform_device(dev);
 	struct pxa27x_keypad *keypad = platform_get_drvdata(pdev);
 
-	/*
-	 * If the keypad is used a wake up source, clock can not be disabled.
-	 * Or it can not detect the key pressing.
-	 */
+	clk_disable(keypad->clk);
+
 	if (device_may_wakeup(&pdev->dev))
 		enable_irq_wake(keypad->irq);
-	else
-		clk_disable_unprepare(keypad->clk);
 
 	return 0;
 }
@@ -455,24 +451,19 @@ static int pxa27x_keypad_resume(struct device *dev)
 	struct pxa27x_keypad *keypad = platform_get_drvdata(pdev);
 	struct input_dev *input_dev = keypad->input_dev;
 
-	/*
-	 * If the keypad is used as wake up source, the clock is not turned
-	 * off. So do not need configure it again.
-	 */
-	if (device_may_wakeup(&pdev->dev)) {
+	if (device_may_wakeup(&pdev->dev))
 		disable_irq_wake(keypad->irq);
-	} else {
-		mutex_lock(&input_dev->mutex);
 
-		if (input_dev->users) {
-			/* Enable unit clock */
-			clk_prepare_enable(keypad->clk);
-			pxa27x_keypad_config(keypad);
-		}
+	mutex_lock(&input_dev->mutex);
 
-		mutex_unlock(&input_dev->mutex);
+	if (input_dev->users) {
+		/* Enable unit clock */
+		clk_enable(keypad->clk);
+		pxa27x_keypad_config(keypad);
 	}
 
+	mutex_unlock(&input_dev->mutex);
+
 	return 0;
 }
 
-- 
1.8.2

